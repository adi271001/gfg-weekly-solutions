class Solution:
    def totalSubarrays(self, n, x, a):
        # code here
        li=[[0]*n for i in range(32)]
        for i in range(n):
            for j in range(32):
                if (a[i]&(1<<j)):
                    li[j][i]=1
        for i in range(32):
            for j in range(1,n):
                li[i][j]+=li[i][j-1]
        finans=0
        for i in range(n):
            if ((a[i]&x)==x):
                # take the minimum for x bits mi
                # take the maximum for !x set bits ma
                ma=0
                mi=1e7
                for j in range(32):
                    if (a[i]&(1<<j)):
                        num=li[j][i]
                        l=i
                        r=n-1
                        ans=0
                        while(l<=r):
                            mid=(l+r)//2
                            if (li[j][mid]==(num+(mid-i))):
                                ans=mid
                                l=mid+1
                            else:
                                r=mid-1
                        if ((1<<j)&(x)):
                            mi=min(ans-i+1,mi)
                        else:
                            ma=max(ma,ans-i+1)
                finans+=max(0,mi-ma)
        return finans
